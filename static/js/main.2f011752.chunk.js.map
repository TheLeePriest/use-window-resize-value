{"version":3,"sources":["App.js","../../src/index.js","index.js"],"names":["App","windowWidth","getWindowWidth","window","useState","setWindowWidth","useEffect","resize","useWindowResizeValue","ReactDOM","render","document","getElementById"],"mappings":"spCAWeA,EARH,WACV,IAAMC,ECF4B,WAClC,IAAMC,EAAiB,kBAAMC,OAAN,YADiB,IAEFC,mBAASF,KAFP,GAEjCD,EAFiC,KAEpBI,EAFoB,KAgBxC,OAZAC,qBAAU,WACR,IAAMC,EAAS,WACbF,EAAeH,MAKjB,OAFAC,oCAEO,WACLA,0CARJG,IAYA,EDdoBE,GACpB,OACE,6BACGP,IEDPQ,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.2f011752.chunk.js","sourcesContent":["import React from 'react'\nimport { useWindowResizeValue } from 'use-window-resize-value'\n\nconst App = () => {\n  const windowWidth = useWindowResizeValue()\n  return (\n    <div>\n      {windowWidth}\n    </div>\n  )\n}\nexport default App\n","import { useEffect, useState } from 'react'\n\nexport const useWindowResizeValue = () => {\n  const getWindowWidth = () => window.innerWidth\n  const [windowWidth, setWindowWidth] = useState(getWindowWidth())\n\n  useEffect(() => {\n    const resize = () => {\n      setWindowWidth(getWindowWidth())\n    }\n\n    window.addEventListener('resize', resize)\n\n    return () => {\n      window.removeEventListener('resize', resize)\n    }\n  }, [])\n\n  return windowWidth\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport './index.css'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}